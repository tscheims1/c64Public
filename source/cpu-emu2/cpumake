# makefile for cpu-emu2
# 2015/BHO1
# 18.8.1015: adding rules 
# sudo apt-get install build-essential make libsdl-image1.2-dev
# sudo apt-get install cdecl

#name of alu main test program

CC        := gcc
LD        := ld

#alu
ALU_MODULES   := cpu printers alu memory
ALU_SRC_DIR   := $(addprefix src/,$(ALU_MODULES))
ALU_BUILD_DIR := $(addprefix build/,$(ALU_MODULES))

ALU_SRC       := $(foreach sdir,$(ALU_SRC_DIR), $(filter-out $(sdir)/alu-main.c, $(filter-out $(sdir)/alu.student.c, $(wildcard $(sdir)/*.c))))

ALU_OBJ       := $(patsubst src/%.c,build/%.o,$(ALU_SRC))
ALU_INCLUDES  := $(addprefix -I,$(ALU_SRC_DIR))



vpath %.c $(ALU_SRC_DIR)

define make-goal
$1/%.o: %.c
	@echo $< 
	$(CC) -W -Wall -g $(ALU_INCLUDES) -c $$< -o $$@
endef

.PHONY: all alu alutest checkdirs clean cpu

all: checkdirs build/alu.exe


MODULES = cpu printers alu memory graphic
BDIR    = build
SRC_DIR   := $(addprefix src/,$(MODULES))
DEPS := $(addprefix -I,$(SRC_DIR))

_OBJ = graphic-main.o graphic.o cpu.o cpu-util.o decode.o mu-code.o opcode_tbl.o register.o print-cpu.o memory.o flags.o alu.o 
_SRC = graphic/graphic-main.c graphic/graphic.c cpu/cpu.c cpu/cpu-util.c cpu/decode.c cpu/mu-code.c cpu/opcode_tbl.c cpu/register.c printers/print-cpu.c memory/memory.c alu/flags.c alu/alu.c 

#$(patsubst src/%.c,build/%.o,$(_OBJ))
OBJ = $(patsubst %,$(BDIR)/%,$(_OBJ))

VPATH = src/cpu src/printers src/alu src/memory src/graphic
#$(BDIR)/%.o: scr/cpu/%.c src/memory/%.c src/printers/%.c src/alu/%.c src/graphic/%.c $(DEPS)
$(BDIR)/%.o: %.c
	@echo $< 
	$(CC) -W -Wall -g  $(ALU_INCLUDES) `sdl-config --cflags --libs` -c $^ 
#$(CC) -c -o $@ $< $(CFLAGS)

#build/graphic-main.o: graphic-main.c
#@echo $< 
#$(CC) -W -Wall -g -o $@ $^ 
#make -f cpumake graphic
#make: *** No rule to make target 'graphic-main.o', needed by 'build/graphic-main.o'.  Stop.

#make -f cpumake graphic
#make: *** No rule to make target 'build/graphic-main.o', needed by 'graphic'.  Stop.

graphic: $(_OBJ) 
	@echo $< 
	gcc -o $@ $^ $(CFLAGS) $(LIBS)



cpu: checkdirs build/cpu.exe

build/alutest: $(OBJ)
	$(CC) -o $@ $^ 

build/alu.exe: $(ALU_OBJ)
	$(CC) -W -Wall -g -o $@ $^ 

build/cpu.exe: $(ALU_OBJ)
	$(CC) -W -Wall -g -o $@ $^ 


#checkdirs: $(BUILD_DIR)

checkdirs:  $(ALU_BUILD_DIR)

$(ALU_BUILD_DIR):
	@mkdir -p $@

#$(BUILD_DIR):
#	@mkdir -p $@

alutest: checkdirs build/alu.exe
	@echo "\n running alutest"	 $@	$^ 
	cat test/alu/alu-test-minimal.txt | build/alu.exe  | diff - test/alu/alu-test-minimal-results.txt

clean:
	@echo "\n ram -rf $(ALU_BUILD_DIR) $(BUILD_DIR) running alu-test minimal" $@	$^ 
	@rm -rf $(ALU_BUILD_DIR)
	@rm -rf $(BUILD_DIR)

# ALU_BUILD_DIR   := $(BUILD_DIR)
$(foreach bdir,$(ALU_BUILD_DIR),$(eval $(call make-goal,$(bdir))))
